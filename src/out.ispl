Semantics=SingleAssignment;

Agent Environment
	Vars:
		r1: {none,A1,A2};
		r2: {none,A1,A2};
		r3: {none,A2,A3};
		rem_A3 : 0..1;
		rem_A1 : 0..2;
	end Vars
	Actions = {none};
	Protocol:
		Other: {none};
	end Protocol
	Evolution:
		r1=A1 if (r1=none and A1.Action=req_r1 and !(A2.Action=req_r1));
		r1=none if (r1=A1 and A1.Action=rel_r1);
		r1=none if (r1=A1 and A1.Action=relall);
		rem_A1=rem_A1-1 if (r1=none and A1.Action=req_r1 and !(A2.Action=req_r1));
		rem_A1=rem_A1+1 if (r1=A1 and A1.Action=rel_r1);
		rem_A1=2 if (r1=A1 and A1.Action=relall);
		r1=A2 if (r1=none and A2.Action=req_r1 and !(A1.Action=req_r1));
		r1=none if (r1=A2 and A2.Action=rel_r1);
		r1=none if (r1=A2 and A2.Action=relall);
		r2=A1 if (r2=none and A1.Action=req_r2 and !(A2.Action=req_r2));
		r2=none if (r2=A1 and A1.Action=rel_r2);
		r2=none if (r2=A1 and A1.Action=relall);
		rem_A1=rem_A1-1 if (r2=none and A1.Action=req_r2 and !(A2.Action=req_r2));
		rem_A1=rem_A1+1 if (r2=A1 and A1.Action=rel_r2);
		rem_A1=2 if (r2=A1 and A1.Action=relall);
		r2=A2 if (r2=none and A2.Action=req_r2 and !(A1.Action=req_r2));
		r2=none if (r2=A2 and A2.Action=rel_r2);
		r2=none if (r2=A2 and A2.Action=relall);
		r3=A2 if (r3=none and A2.Action=req_r3 and !(A3.Action=req_r3));
		r3=none if (r3=A2 and A2.Action=rel_r3);
		r3=none if (r3=A2 and A2.Action=relall);
		r3=A3 if (r3=none and A3.Action=req_r3 and !(A2.Action=req_r3));
		r3=none if (r3=A3 and A3.Action=rel_r3);
		r3=none if (r3=A3 and A3.Action=relall);
		rem_A3=rem_A3-1 if (r3=none and A3.Action=req_r3 and !(A2.Action=req_r3));
		rem_A3=rem_A3+1 if (r3=A3 and A3.Action=rel_r3);
		rem_A3=1 if (r3=A3 and A3.Action=relall);
	end Evolution
end Agent

Agent A1
	Lobsvars = {r1,r2,rem_A3,rem_A1};
	Vars:
		rem : 0..2;
		idl : boolean;
	end Vars
	Actions = {req_r1,rel_r1,req_r2,rel_r2,relall,idle};
	Protocol:
		rem = 0 : {relall};
		rem > 0 : {idle};
		rem > 0 and Environment.r1=none : {req_r1};
		rem > 0 and Environment.r1=A1 : {rel_r1};
		rem > 0 and Environment.r2=none : {req_r2};
		rem > 0 and Environment.r2=A1 : {rel_r2};
	end Protocol
	Evolution:
		rem=rem-1 if (Action=req_r1 and Environment.r1=none and Environment.r1 = none and !(A2.Action=req_r1));
		rem=rem+1 if (Action=rel_r1);
		rem=2 if (Action=relall);
		idl=false if (Action=req_r1 and Environment.r1=none and Environment.r1 = none and !(A2.Action=req_r1));
		idl=false if (Action=rel_r1);
		idl=false if (Action=relall);
		idl=true if (Action=idle);
		rem=rem-1 if (Action=req_r2 and Environment.r2=none and Environment.r2 = none and !(A2.Action=req_r2));
		rem=rem+1 if (Action=rel_r2);
		rem=2 if (Action=relall);
		idl=false if (Action=req_r2 and Environment.r2=none and Environment.r2 = none and !(A2.Action=req_r2));
		idl=false if (Action=rel_r2);
		idl=false if (Action=relall);
		idl=true if (Action=idle);
	end Evolution
end Agent

Agent A2
	Lobsvars = {r1,r2,r3,rem_A3,rem_A1};
	Vars:
		rem : 0..2;
		idl : boolean;
	end Vars
	Actions = {req_r1,rel_r1,req_r2,rel_r2,req_r3,rel_r3,relall,idle};
	Protocol:
		rem = 0 : {relall};
		rem > 0 : {idle};
		rem > 0 and Environment.r1=none : {req_r1};
		rem > 0 and Environment.r1=A2 : {rel_r1};
		rem > 0 and Environment.r2=none : {req_r2};
		rem > 0 and Environment.r2=A2 : {rel_r2};
		rem > 0 and Environment.r3=none : {req_r3};
		rem > 0 and Environment.r3=A2 : {rel_r3};
	end Protocol
	Evolution:
		rem=rem-1 if (Action=req_r1 and Environment.r1=none and Environment.r1 = none and !(A1.Action=req_r1));
		rem=rem+1 if (Action=rel_r1);
		rem=2 if (Action=relall);
		idl=false if (Action=req_r1 and Environment.r1=none and Environment.r1 = none and !(A1.Action=req_r1));
		idl=false if (Action=rel_r1);
		idl=false if (Action=relall);
		idl=true if (Action=idle);
		rem=rem-1 if (Action=req_r2 and Environment.r2=none and Environment.r2 = none and !(A1.Action=req_r2));
		rem=rem+1 if (Action=rel_r2);
		rem=2 if (Action=relall);
		idl=false if (Action=req_r2 and Environment.r2=none and Environment.r2 = none and !(A1.Action=req_r2));
		idl=false if (Action=rel_r2);
		idl=false if (Action=relall);
		idl=true if (Action=idle);
		rem=rem-1 if (Action=req_r3 and Environment.r3=none and Environment.r3 = none and !(A3.Action=req_r3));
		rem=rem+1 if (Action=rel_r3);
		rem=2 if (Action=relall);
		idl=false if (Action=req_r3 and Environment.r3=none and Environment.r3 = none and !(A3.Action=req_r3));
		idl=false if (Action=rel_r3);
		idl=false if (Action=relall);
		idl=true if (Action=idle);
	end Evolution
end Agent

Agent A3
	Lobsvars = {r3,rem_A3,rem_A1};
	Vars:
		rem : 0..1;
		idl : boolean;
	end Vars
	Actions = {req_r3,rel_r3,relall,idle};
	Protocol:
		rem = 0 : {relall};
		rem > 0 : {idle};
		rem > 0 and Environment.r3=none : {req_r3};
		rem > 0 and Environment.r3=A3 : {rel_r3};
	end Protocol
	Evolution:
		rem=rem-1 if (Action=req_r3 and Environment.r3=none and Environment.r3 = none and !(A2.Action=req_r3));
		rem=rem+1 if (Action=rel_r3);
		rem=1 if (Action=relall);
		idl=false if (Action=req_r3 and Environment.r3=none and Environment.r3 = none and !(A2.Action=req_r3));
		idl=false if (Action=rel_r3);
		idl=false if (Action=relall);
		idl=true if (Action=idle);
	end Evolution
end Agent

Evaluation
	A1_eat if (A1.rem=0);
	A2_eat if (A2.rem=0);
	A3_eat if (A3.rem=0);
	not_idle_A1 if (A1.idl=false);
	not_idle_A2 if (A2.idl=false);
	not_idle_A3 if (A3.idl=false);
end Evaluation

InitStates
	Environment.r1=none and
	Environment.r2=none and
	Environment.r3=none and
	Environment.rem_A3=1 and
	Environment.rem_A1=2 and
	A2.rem=2 and
	A3.rem=1;
end InitStates

Groups
	A1_A2_A3 = {A3, A2, A1};
	A1__A3 = {A3, A2, A1};
	EXA1_A3 = {A2};
end Groups

Fairness
	not_idle_A1;
	not_idle_A2;
	not_idle_A3;
end Fairness

Formulae
	(<A1_A2_A3>F A3_eat) and (<A1_A2_A3>F A2_eat) and (<A1_A2_A3>F A1_eat);
	<A1__A3>G ((<A1__A3>F A3_eat) and (<A1__A3>F A2_eat) and (<A1__A3>F A1_eat));
	<EXA1_A3>G (!A1_eat and !A3_eat);
end Formulae

