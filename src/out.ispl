Semantics=SingleAssignment;

Agent Environment
	Vars:
		r1: 0..3;
		r2: 0..3;
		r3: 0..3;
	end Vars
	Actions = {none};
	Protocol:
		Other: {none};
	end Protocol
	Evolution:
		r1 = 1 if (r1 = 0 and A1.Action = req1 and !(A2.Action = req1));
		r1 = 0 if (r1 = 1 and A1.Action = rel1);
		r1 = 0 if (r1 = 1 and A1.Action = relall);
		r1 = 2 if (r1 = 0 and A2.Action = req1 and !(A1.Action = req1));
		r1 = 0 if (r1 = 2 and A2.Action = rel1);
		r1 = 0 if (r1 = 2 and A2.Action = relall);
		r2 = 1 if (r2 = 0 and A1.Action = req2 and !(A2.Action = req2));
		r2 = 0 if (r2 = 1 and A1.Action = rel2);
		r2 = 0 if (r2 = 1 and A1.Action = relall);
		r2 = 2 if (r2 = 0 and A2.Action = req2 and !(A1.Action = req2));
		r2 = 0 if (r2 = 2 and A2.Action = rel2);
		r2 = 0 if (r2 = 2 and A2.Action = relall);
		r3 = 2 if (r3 = 0 and A2.Action = req3 and !(A3.Action = req3));
		r3 = 0 if (r3 = 2 and A2.Action = rel3);
		r3 = 0 if (r3 = 2 and A2.Action = relall);
		r3 = 3 if (r3 = 0 and A3.Action = req3 and !(A2.Action = req3));
		r3 = 0 if (r3 = 3 and A3.Action = rel3);
		r3 = 0 if (r3 = 3 and A3.Action = relall);
	end Evolution
end Agent

Agent A1
	Lobsvars = {r1,r2};
	Vars:
		rem: 0..2;
	end Vars
	Actions = {req1,rel1,req2,rel2,relall,idle};
	Protocol:
		rem = 0 : {relall};
		rem > 0 : {idle};
		rem > 0 and Environment.r1 = 0 : {req1};
		rem > 0 and Environment.r1 = 1 : {rel1};
		rem > 0 and Environment.r2 = 0 : {req2};
		rem > 0 and Environment.r2 = 1 : {rel2};
	end Protocol
	Evolution:
		rem = rem-1 if (Action = req1 and Environment.r1 = 0 and Environment.r1 = 0 and !(A2.Action = req1));
		rem = rem+1 if (Action = rel1);
		rem = 2 if (Action = relall);
		rem = rem-1 if (Action = req2 and Environment.r2 = 0 and Environment.r2 = 0 and !(A2.Action = req2));
		rem = rem+1 if (Action = rel2);
		rem = 2 if (Action = relall);
	end Evolution
end Agent

Agent A2
	Lobsvars = {r1,r2,r3};
	Vars:
		rem: 0..2;
	end Vars
	Actions = {req1,rel1,req2,rel2,req3,rel3,relall,idle};
	Protocol:
		rem = 0 : {relall};
		rem > 0 : {idle};
		rem > 0 and Environment.r1 = 0 : {req1};
		rem > 0 and Environment.r1 = 2 : {rel1};
		rem > 0 and Environment.r2 = 0 : {req2};
		rem > 0 and Environment.r2 = 2 : {rel2};
		rem > 0 and Environment.r3 = 0 : {req3};
		rem > 0 and Environment.r3 = 2 : {rel3};
	end Protocol
	Evolution:
		rem = rem-1 if (Action = req1 and Environment.r1 = 0 and Environment.r1 = 0 and !(A1.Action = req1));
		rem = rem+1 if (Action = rel1);
		rem = 2 if (Action = relall);
		rem = rem-1 if (Action = req2 and Environment.r2 = 0 and Environment.r2 = 0 and !(A1.Action = req2));
		rem = rem+1 if (Action = rel2);
		rem = 2 if (Action = relall);
		rem = rem-1 if (Action = req3 and Environment.r3 = 0 and Environment.r3 = 0 and !(A3.Action = req3));
		rem = rem+1 if (Action = rel3);
		rem = 2 if (Action = relall);
	end Evolution
end Agent

Agent A3
	Lobsvars = {r3};
	Vars:
		rem: 0..1;
	end Vars
	Actions = {req3,rel3,relall,idle};
	Protocol:
		rem = 0 : {relall};
		rem > 0 : {idle};
		rem > 0 and Environment.r3 = 0 : {req3};
		rem > 0 and Environment.r3 = 3 : {rel3};
	end Protocol
	Evolution:
		rem = rem-1 if (Action = req3 and Environment.r3 = 0 and Environment.r3 = 0 and !(A2.Action = req3));
		rem = rem+1 if (Action = rel3);
		rem = 1 if (Action = relall);
	end Evolution
end Agent

Evaluation
	eat1 if (A1.rem=0);
	eat2 if (A2.rem=0);
	eat3 if (A3.rem=0);
end Evaluation

InitStates
	Environment.r1=0 and
	Environment.r2=0 and
	Environment.r3=0 and
	A1.rem = 2 and
	A2.rem = 2 and
	A3.rem = 1;
end InitStates

Groups
	A1_A3 = {A1, A2, A3};
	exA3 = {A1, A2, A3};
	exA2 = {A1, A2, A3};
	A1A2 = {A1, A2};
end Groups

Formulae
	(<A1_A3>F eat1) and (<A1_A3>F eat2) and (<A1_A3>F eat3);
	<exA3>G ((<exA3>F eat1) and (<exA3>F eat2) and (<exA3>F eat3));
	<A1A2>G (!eat1 and !eat2);
	(<exA2>F eat1) and (<exA2>F eat2) and (<exA2>F eat3);
end Formulae

